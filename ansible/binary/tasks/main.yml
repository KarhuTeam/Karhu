---

- name: Setup User Group
  group: name={{ runtime_user }} system=yes

- name: Setup User
  user: name={{ runtime_user }} group={{ runtime_user }} system=yes

- name: Setup WorkDir
  file: path={{ item }} state=directory owner={{ runtime_user }} group={{ runtime_user }}
  with_items:
  - "{{ runtime_workdir }}"
  - "{{ runtime_workdir }}/bin"

- name: Install Dependencies
  apt: name={{ item }} state=present update_cache=yes cache_valid_time=86400
  with_items: "{{ runtime_dependencies|default([]) }}"

- name: Setup Dest Dirs
  file: path={{ item.destdir }} owner={{ item.user }} group={{ item.user }} state=directory
  with_items: runtime_files
  when: item.destdir is defined

# - name: Setup Files
# #  copy: src={{ item.src }} dest={{ item.dest }} owner={{ runtime_user }} group={{ runtime_user }} mode={{ item.mode }}
#   copy: src={{ item.src }} dest={{ item.dest }} owner={{ item.user }} group={{ item.user }} mode={{ item.mode }}
#   with_items: runtime_files
#   register: runtime_files_installed

- name: Setup Files
  sudo: no # Relative to local machine
  synchronize: src={{ item.src }} dest={{ item.dest }} use_ssh_args=yes set_remote_user=yes recursive=yes delete=yes compress=yes mode=push checksum=yes times=no
  with_items: runtime_files
  register: runtime_files_installed

- name: Setup systemctl script
  template: src=binary.service dest=/lib/systemd/system/{{ application_name }}.service
  notify: systemctl daemon-reload

- name: Enable & Start Service
  service: name={{ application_name }} state=started enabled=yes

- name: Restart Needed Services
  service: name={{ item.item.notify.service }} state={{ item.item.notify.state }}
  with_items: runtime_files_installed.results
  when: (item.changed) and (item.item.notify.service != '')
